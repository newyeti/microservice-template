# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Continuous Integration

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      GIT_TAG: latest
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -Denv=dev --file pom.xml clean compile jib:dockerBuild
  
  build-push-dockerhub:
    
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    env:
      IMAGE_NAME: newyeti-config-server
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      GIT_TAG: latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker Image to Docker Hub
      run: mvn -Denv=dev --file pom.xml clean compile jib:build


